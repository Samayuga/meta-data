using MetaDataCoreServices.Core.Data.MetaDataDatabase.EntityFramework.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace MetaDataCoreServices.Core.Data.MetaDataDatabase.EntityFramework.EntityTypeConfigurations
{
    public class CountryEntityTypeConfiguration : IEntityTypeConfiguration<Country>
    {
        public void Configure(EntityTypeBuilder<Country> builder)
        {
            builder.HasKey(c => c.CountryId);
            builder.Property(c => c.CountryName).IsRequired();
            builder.HasOne(c => c.Currency).WithMany().HasForeignKey(c => c.CurrencyId);

            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/1/"), CountryName = "Algeria" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/2/"), CountryName = "Angola" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/3/"), CountryName = "Benin" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/4/"), CountryName = "Botswana" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/5/"), CountryName = "Burkina Faso" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/6/"), CountryName = "Burundi" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/7/"), CountryName = "Cameroon" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/8/"), CountryName = "Cape Verde" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/9/"), CountryName = "Central African Republic" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/10/"), CountryName = "Chad" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/11/"), CountryName = "Comoros" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/12/"), CountryName = "Republic of the Congo" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/13/"), CountryName = "Democratic Republic of the Congo" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/14/"), CountryName = "Ivory Coast" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/15/"), CountryName = "Djibouti" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/16/"), CountryName = "Egypt" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/17/"), CountryName = "Equatorial Guinea" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/18/"), CountryName = "Eritrea" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/19/"), CountryName = "Ethiopia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/20/"), CountryName = "Gabon" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/21/"), CountryName = "The Gambia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/22/"), CountryName = "Ghana" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/23/"), CountryName = "Guinea" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/24/"), CountryName = "Guinea-Bissau" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/25/"), CountryName = "Kenya" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/26/"), CountryName = "Lesotho" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/27/"), CountryName = "Liberia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/28/"), CountryName = "Libya" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/29/"), CountryName = "Madagascar" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/30/"), CountryName = "Malawi" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/31/"), CountryName = "Mali" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/32/"), CountryName = "Mauritania" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/33/"), CountryName = "Mauritius" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/34/"), CountryName = "Morocco" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/35/"), CountryName = "Mozambique" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/36/"), CountryName = "Namibia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/37/"), CountryName = "Niger" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/38/"), CountryName = "Nigeria" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/39/"), CountryName = "Rwanda" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/40/"), CountryName = "São Tomé and Príncipe" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/41/"), CountryName = "Senegal" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/42/"), CountryName = "Seychelles" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/43/"), CountryName = "Sierra Leone" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/44/"), CountryName = "Somalia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/45/"), CountryName = "South Africa" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/46/"), CountryName = "South Sudan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/47/"), CountryName = "Sudan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/48/"), CountryName = "Swaziland" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/49/"), CountryName = "Tanzania" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/50/"), CountryName = "Togo" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/51/"), CountryName = "Tunisia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/52/"), CountryName = "Uganda" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/53/"), CountryName = "Western Sahara" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/54/"), CountryName = "Zambia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/1/55/"), CountryName = "Zimbabwe" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/1/"), CountryName = "Afghanistan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/2/"), CountryName = "Armenia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/3/"), CountryName = "Azerbaijan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/4/"), CountryName = "Bahrain" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/5/"), CountryName = "Bangladesh" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/6/"), CountryName = "Bhutan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/7/"), CountryName = "Brunei" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/8/"), CountryName = "Cambodia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/9/"), CountryName = "China" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/10/"), CountryName = "East Timor" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/11/"), CountryName = "Georgia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/12/"), CountryName = "India" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/13/"), CountryName = "Indonesia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/14/"), CountryName = "Iran" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/15/"), CountryName = "Iraq" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/16/"), CountryName = "Israel" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/17/"), CountryName = "Japan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/18/"), CountryName = "Jordan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/19/"), CountryName = "Kazakhstan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/20/"), CountryName = "Kuwait" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/21/"), CountryName = "Kyrgyzstan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/22/"), CountryName = "Laos" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/23/"), CountryName = "Lebanon" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/24/"), CountryName = "Malaysia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/25/"), CountryName = "Maldives" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/26/"), CountryName = "Mongolia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/27/"), CountryName = "Myanmar" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/28/"), CountryName = "Nepal" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/29/"), CountryName = "North Korea" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/30/"), CountryName = "Oman" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/31/"), CountryName = "Pakistan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/32/"), CountryName = "Philippines" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/33/"), CountryName = "Palestine" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/34/"), CountryName = "Qatar" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/35/"), CountryName = "Russia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/36/"), CountryName = "Saudi Arabia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/37/"), CountryName = "Singapore" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/38/"), CountryName = "South Korea" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/39/"), CountryName = "Sri Lanka" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/40/"), CountryName = "Syria" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/41/"), CountryName = "Tajikistan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/42/"), CountryName = "Thailand" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/43/"), CountryName = "Turkey" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/44/"), CountryName = "Turkmenistan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/45/"), CountryName = "Taiwan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/46/"), CountryName = "United Arab Emirates" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/47/"), CountryName = "Uzbekistan" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/48/"), CountryName = "Vietnam" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/3/49/"), CountryName = "Yemen" });         
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/1/"), CountryName = "Albania" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/2/"), CountryName = "Andorra" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/3/"), CountryName = "Austria" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/4/"), CountryName = "Belarus" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/5/"), CountryName = "Belgium" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/6/"), CountryName = "Bosnia and Herzegovina" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/7/"), CountryName = "Bulgaria" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/8/"), CountryName = "Croatia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/9/"), CountryName = "Cyprus" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/10/"), CountryName = "Czech Republic" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/11/"), CountryName = "Denmark" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/12/"), CountryName = "Estonia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/13/"), CountryName = "Finland" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/14/"), CountryName = "France" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/15/"), CountryName = "Germany" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/16/"), CountryName = "Greece" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/17/"), CountryName = "Hungary" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/18/"), CountryName = "Iceland" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/19/"), CountryName = "Republic of Ireland" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/20/"), CountryName = "Italy" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/21/"), CountryName = "Kosovo" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/22/"), CountryName = "Latvia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/23/"), CountryName = "Liechtenstein" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/24/"), CountryName = "Lithuania" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/25/"), CountryName = "Luxembourg" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/26/"), CountryName = "North Macedonia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/27/"), CountryName = "Malta" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/28/"), CountryName = "Moldova" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/29/"), CountryName = "Monaco" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/30/"), CountryName = "Montenegro" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/31/"), CountryName = "Netherlands" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/32/"), CountryName = "Norway" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/33/"), CountryName = "Poland" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/34/"), CountryName = "Portugal" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/35/"), CountryName = "Romania" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/36/"), CountryName = "Moscow" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/37/"), CountryName = "San Marino" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/38/"), CountryName = "Serbia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/39/"), CountryName = "Slovakia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/40/"), CountryName = "Slovenia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/41/"), CountryName = "Spain" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/42/"), CountryName = "Sweden" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/43/"), CountryName = "Switzerland" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/44/"), CountryName = "Ukraine" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/45/"), CountryName = "United Kingdom" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/4/46/"), CountryName = "Vatican City" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/1/"), CountryName = "Antigua and Barbuda" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/2/"), CountryName = "Anguilla" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/3/"), CountryName = "Aruba" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/4/"), CountryName = "The Bahamas" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/5/"), CountryName = "Barbados" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/6/"), CountryName = "Belize" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/7/"), CountryName = "Bermuda" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/8/"), CountryName = "Bonaire" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/9/"), CountryName = "British Virgin Islands" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/10/"), CountryName = "Canada" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/11/"), CountryName = "Cayman Islands" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/12/"), CountryName = "Clipperton Island" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/13/"), CountryName = "Costa Rica" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/14/"), CountryName = "Cuba" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/15/"), CountryName = "Curaçao" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/16/"), CountryName = "Dominica" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/17/"), CountryName = "Dominican Republic" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/18/"), CountryName = "El Salvador" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/19/"), CountryName = "Greenland" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/20/"), CountryName = "Grenada" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/21/"), CountryName = "Guadeloupe" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/22/"), CountryName = "Guatemala" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/23/"), CountryName = "Haiti" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/24/"), CountryName = "Honduras" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/25/"), CountryName = "Jamaica" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/26/"), CountryName = "Martinique" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/27/"), CountryName = "Mexico" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/28/"), CountryName = "Montserrat" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/29/"), CountryName = "Navassa Island" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/30/"), CountryName = "Nicaragua" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/31/"), CountryName = "Panama" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/32/"), CountryName = "Puerto Rico" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/33/"), CountryName = "Saba" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/34/"), CountryName = "Saint Barthelemy" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/35/"), CountryName = "Saint Kitts and Nevis" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/36/"), CountryName = "Saint Lucia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/37/"), CountryName = "Saint Martin" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/38/"), CountryName = "Saint Pierre and Miquelon" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/39/"), CountryName = "Saint Vincent and the Grenadines" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/40/"), CountryName = "Sint Eustatius" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/41/"), CountryName = "Sint Maarten" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/42/"), CountryName = "Trinidad and Tobago" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/43/"), CountryName = "Turks and Caicos" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/44/"), CountryName = "United States of America" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/5/45/"), CountryName = "US Virgin Islands" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/1/"), CountryName = "Argentina" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/2/"), CountryName = "Bolivia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/3/"), CountryName = "Brazil" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/4/"), CountryName = "Chile" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/5/"), CountryName = "Colombia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/6/"), CountryName = "Ecuador" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/7/"), CountryName = "Falkland Islands" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/8/"), CountryName = "French Guiana" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/9/"), CountryName = "Guyana" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/10/"), CountryName = "Paraguay" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/11/"), CountryName = "Peru" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/12/"), CountryName = "South Georgia and the South Sandwich Islands" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/13/"), CountryName = "Suriname" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/14/"), CountryName = "Uruguay" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/6/15/"), CountryName = "Venezuela" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/1/"), CountryName = "Australia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/2/"), CountryName = "Federated States of Micronesia" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/3/"), CountryName = "Fiji" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/4/"), CountryName = "Kiribati" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/5/"), CountryName = "Marshall Islands" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/6/"), CountryName = "Nauru" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/7/"), CountryName = "New Zealand" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/8/"), CountryName = "Palau" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/9/"), CountryName = "Papua New Guinea" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/10/"), CountryName = "Samoa" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/11/"), CountryName = "Solomon Islands" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/12/"), CountryName = "Tonga" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/13/"), CountryName = "Tuvalu" });
            builder.HasData(new Country { CountryId = HierarchyId.Parse("/1/7/14/"), CountryName = "Vanuatu" });
        }
    }
}
